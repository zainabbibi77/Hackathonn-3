{/*async function uploadImageToSanity(imageUrl) {
  try {
    console.log(`Uploading image: ${imageUrl}`);

    const response = await fetch(imageUrl);
    if (!response.ok) {
      throw new Error(`Failed to fetch image: ${imageUrl}`);
    }

    const buffer = await response.arrayBuffer();
    const bufferImage = Buffer.from(buffer);

    const asset = await client.assets.upload('image', bufferImage, {
      filename: imageUrl.split('/').pop(),
    });

    console.log(`Image uploaded successfully: ${asset._id}`);
    return asset._id;
  } catch (error) {
    console.error('Failed to upload image:', imageUrl, error);
    return null;
  }
}*/}
  






{/*import { Button } from "@/components/ui/button";
import { client } from "@/sanity/lib/client";
import Image from "next/image";
import Link from "next/link";
import { FaStar } from "react-icons/fa";

interface Iproducts {
    title: string,
    price: string,
    id: number
    rating?: string,
    old_price?: string
    img_url: string
}

let product: Iproducts[] = [
    {
        title: "T-SHIRT WITH TAPE DETAILS",
        id: 1,
        price: "$120",
        img_url: "/product1.png"
    },
    {
        title: "SKINNY FIT JEANS",
        id: 2,
        price: "$120",
        img_url: "/product2.png",
        old_price: "$200"
    },
    {
        title: "CHECKERED SHIRT",
        id: 3,
        price: "$120",
        img_url: "/product3.png"
    },
    {
        title: "SLEEVE STRIPED T-SHIRT",
        id: 4,
        price: "$120",
        img_url: "/product4.png",
        old_price: "$200"
    }
]

// Adding key prop in star array
let star = [
  <FaStar key={1} />,
  <FaStar key={2} />,
  <FaStar key={3} />,
  <FaStar key={4} />,
  <FaStar key={5} />,
];

export default async function Products() {
  const query= `*[_type=="products"]{
      name,
    description,
    price,
     "image":image.asset->url, ,
     category,
    discountPercent,
    colors,
    
    sizes,
        
    }`;
    const product=  await client.fetch(query);
    console.log(product)
  return (
      <>
      <div className="w-full h-full  mt-10 max-w-screen-xl mx-auto">
          <h1 className="text-3xl md:text-4xl font-bold text-center">NEW ARRIVALS</h1>
          <div className="relative  mt-10 overflow-x-auto flex space-x-5 px-8 ">
              {product.map((data:any) => {
                  return (
                      <div key={data.id} className=" flex-shrink-0">
                          <Link href={`/product/${data.id}`}>
                              <div className="w-[200px] md:w-[283px] h-[200px] md:h-[290px] bg-[#F0EEED] rounded-[20px]">
                                  <Image
                                      src={data.image}
                                      alt={data.name}
                                      className="w-full h-full rounded-[20px]"
                                      width={100}
                                      height={100}
                                  />
                              </div>
                          </Link>
                          <div className="pl-2">
                              <p className="text-lg mt-2 font-bold">{data.name}</p>
                              <div className="flex text-yellow-400">
                                  {star.map((icon, index) => (
                                      <span key={index}>{icon}</span>
                                  ))}
                              </div>
                              <p className="font-bold mt-1">
                                  {data.price}{" "}
                                  <span className="text-gray-400 font-bold line-through">
                                      {data.price}
                                  </span>
                              </p>
                          </div>
                      </div>
                  );
              })}
          </div>
      </div>
      <div className="flex justify-center items-start mt-5">
      <Link href="/casual">
      <Button variant={"outline"} className=" sm:mt-0 w-[80%]  sm:w-[200px] rounded-[20px]">View all</Button>
      </Link> 
      </div>
      </>
  );
}*/}



{/*import { Button } from "@/components/ui/button";
import { client } from "@/sanity/lib/client";
import Image from "next/image";
import Link from "next/link";
import { FaStar } from "react-icons/fa";

// Sample star component for display
interface Product {
    id: string;
    name: string;
    description: string;
    price: number;
    image: string | null;
    category: string;
    discountPercent: number;
    isnew:boolean,
    colors: string[];
    sizes: string[];
}

export default async function Products() {
    const query = `*[_type=="products"] | order(_createdAt desc)[4..7]{
        _id,
        name,
        description,
        price,
        "image": image.asset->url,
        category,
        discountPercent,
        colors,
        sizes
    }`;

    const product: Product[] = await client.fetch(query);
    console.log(product);  // Log the fetched data to verify the structure

    return (
        <>
            <div className="w-full h-full mt-10 max-w-screen-xl mx-auto">
                <h1 className="text-3xl md:text-4xl font-bold text-center">Top Selling</h1>
                <div className="relative mt-10 overflow-x-auto flex space-x-5 px-8">
                    {product.map((data) => {
                        return (
                            <div key={data.id} className="flex-shrink-0">
                                <Link href={`/product/${data.id}`}>
                                    <div className="w-[200px] md:w-[283px] h-[200px] md:h-[290px] bg-[#F0EEED] rounded-[20px]">
                                        <Image
                                            src={data.image || '/images/default-image.jpg'} // Use fallback image if no image
                                            alt={data.name}
                                            className="w-full h-full rounded-[20px]"
                                            width={100}
                                            height={100}
                                        />
                                    </div>
                                </Link>
                                <div className="pl-2">
                                    <p className="text-lg mt-2 font-bold">{data.name}</p>
                                  
                                    <p className="font-bold mt-1">
                                        {data.price}{" "}
                                        <span className="text-gray-400 font-bold line-through">
                                            {data.price}
                                        </span>
                                    </p>
                                </div>
                            </div>
                        );
                    })}
                </div>
            </div>
            <div className="flex justify-center items-start mt-5">
                <Link href="/casual">
                    <Button variant={"outline"} className="sm:mt-0 w-[80%] sm:w-[200px] rounded-[20px]">View all</Button>
                </Link>
            </div>
        </>
    );
}*/}




